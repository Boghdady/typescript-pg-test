=> Challenge 2: BACKEND
   ===================

1- Install Postgres (v11 preferably) & nodejs 12 (describe what you needed to do to have these versions)

=> solution-1 =>   "Use NVM, stand for node version manager for node and change my current node version to 12 and setup postgres v11 on my local machine" (Not the best solution)

=> solution-2=> "Use docker" (Good solution, and i will use it)

- Usage :
1- docker build -t typescript-pg-test .
2- docker-compose up --build

 ===================================================================================================================

 (Use case 1) =>  Improve the database calls to allow the program to be run any number of times (without complaining that the table already exists) (what would be a more permanent solution to this?);

=> solution => If table exists drop table then create it, if it does not exist just create it so i add this statement "DROP TABLE IF EXISTS github_users;"
That statement drops the table if it exists but will not throw an error if it does not



===================================================================================================================
(Use case 2) => Improve the program to take a command-line argument with the name of the GitHub user;

answer => npm run test ahmed , write this in "command-line"

The way you retrieve it is using the "process" object built into Node.js.
It exposes an "argv" property, which is an array that contains all the command line invocation arguments.

the statement => "  db.one(
      `INSERT INTO github_users (login, name) VALUES ($[login], $[name]) RETURNING id`,
      { ...data, name: process.argv[2] ? process.argv[2] : data.name }
    )"

===================================================================================================================
(Use case 3) Add more fields (to the database and to the API calls);

the statement => db.one(
      'INSERT INTO github_users (login, name, company, type, site_admin) VALUES ($[login], $[name], $[company], $[type], $[site_admin]) RETURNING id, login, name, company, type, site_admin ',
      {data}
    )

===================================================================================================================
(Use case 4) Modify the code or database to not allow duplicate users (depend on what? name or all fields ?) on the database;
We will use Unique Indexes, When an index is declared unique, multiple table rows with equal indexed values are not allowed. (We can create indexs using pgAdmin or using code, i prefered to use code)
the statement =>  "CREATE UNIQUE INDEX name ON table (column [, ...]);" 

"CREATE UNIQUE INDEX users_indexes ON github_users(login, name, company, type, site_admin)"

# using psql : \d github_users

   Column   |  Type   | Collation | Nullable |                 Default                  
------------+---------+-----------+----------+------------------------------------------
 id         | bigint  |           | not null | nextval('github_users_id_seq'::regclass)
 login      | text    |           |          | 
 name       | text    |           |          | 
 company    | text    |           |          | 
 type       | text    |           |          | 
 site_admin | boolean |           |          | 
Indexes:
    "users_indexes" UNIQUE, btree (login, name, company, type, site_admin)


===================================================================================================================
(Use case 5) Modify the program to, under a different command-line option, list all users on the database registered on Github as being in Lisbon; Try to split the code into functions to access the database, and functions that process the database results (pure functions);

# I understand the requirements need to add Lisbon for all users in db, if i miss undersatnd kindly inform me and i will edit the task


# using psql : \d github_users

 id |    login     | name |  company   |     type     | site_admin |                    repos_url                    | location 
----+--------------+------+------------+--------------+------------+-------------------------------------------------+----------
  1 | gaearon      | dan  | @facebook  | User         | f          | https://api.github.com/users/gaearon/repos      | 
  2 | mojombo      |      |            | User         | f          | https://api.github.com/users/mojombo/repos      | Lisbon
  3 | defunkt      |      |            | User         | f          | https://api.github.com/users/defunkt/repos      | Lisbon
  4 | pjhyett      |      |            | User         | f          | https://api.github.com/users/pjhyett/repos      | Lisbon
  5 | wycats       |      |            | User         | f          | https://api.github.com/users/wycats/repos       | Lisbon
  6 | ezmobius     |      |            | User         | f          | https://api.github.com/users/ezmobius/repos     | Lisbon
  7 | ivey         |      |            | User         | f          | https://api.github.com/users/ivey/repos         | Lisbon
  8 | evanphx      |      |            | User         | f          | https://api.github.com/users/evanphx/repos      | Lisbon
  9 | vanpelt      |      |            | User         | f          | https://api.github.com/users/vanpelt/repos      | Lisbon
 10 | wayneeseguin |      |            | User         | f          | https://api.github.com/users/wayneeseguin/repos | Lisbon
 11 | brynary      |      |            | User         | f          | https://api.github.com/users/brynary/repos      | Lisbon
 12 | kevinclark   |      |            | User         | f          | https://api.github.com/users/kevinclark/repos   | Lisbon
 13 | technoweenie |      |            | User         | f          | https://api.github.com/users/technoweenie/repos | Lisbon
 14 | macournoyer  |      |            | User         | f          | https://api.github.com/users/macournoyer/repos  | Lisbon
 15 | takeo        |      |            | User         | f          | https://api.github.com/users/takeo/repos        | Lisbon
 16 | caged        |      |            | User         | f          | https://api.github.com/users/caged/repos        | Lisbon
 17 | topfunky     |      |            | User         | f          | https://api.github.com/users/topfunky/repos     | Lisbon
 18 | anotherjesse |      |            | User         | f          | https://api.github.com/users/anotherjesse/repos | Lisbon
 19 | roland       |      |            | User         | f          | https://api.github.com/users/roland/repos       | Lisbon
 20 | lukas        |      |            | User         | f          | https://api.github.com/users/lukas/repos        | Lisbon
 21 | fanvsfan     |      |            | User         | f          | https://api.github.com/users/fanvsfan/repos     | Lisbon
 22 | tomtt        |      |            | User         | f          | https://api.github.com/users/tomtt/repos        | Lisbon
 23 | railsjitsu   |      |            | User         | f          | https://api.github.com/users/railsjitsu/repos   | Lisbon
 24 | nitay        |      |            | User         | f          | https://api.github.com/users/nitay/repos        | Lisbon

